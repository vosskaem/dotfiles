# ~/.bashrc
# vim: ft=sh

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

HISTCONTROL=ignoredups:erasedups
shopt -s histappend
HISTSIZE=20000
HISTFILESIZE=20000
PROMPT_COMMAND=''
PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a; history -c; history -r"

#PS1='[\u@\h \W]\$ '
CPROMPT='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]'
#PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w \$\[\033[00m\] '
#PS1='\[\033[01;31m\]\h\[\033[00m\] \[\033[01;34m\]\w \$\[\033[00m\] '
PS1="$CPROMPT"' \[\033[01;34m\]\$\[\033[00m\] '

#alias ls='ls --color=auto'
alias ls='eza --git -h --color-scale all'
alias ll='ls -l --icons'
#alias la='ls -lA'
alias la='ls -la'
alias lh='ls -lh'
alias ..='cd ..'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

alias vi='nvim'
alias vimdiff='nvim -d'
alias svim='vim -u ~/.SpaceVim/vimrc'
alias snvim='nvim -u ~/.SpaceVim/vimrc'
alias emacs='emacs -nw'
# alias hx='HELIX_RUNTIME=~/src/Rust/helix/runtime/ ~/src/Rust/helix/target/release/hx'

alias top='htop'
alias start='xdg-open'
alias goback='cd $OLDPWD'
alias hx='helix'
alias lg='lazygit'
alias t='timew'
alias ts='timew sum'
alias tss='timew sum Siemens'
alias tsp='timew sum Privat'

alias matrix='cmatrix'

## make "sudo emacs" work with alias:
alias sudo='sudo '

export LESSOPEN="| /usr/bin/source-highlight-esc.sh %s"
export LESS='-R '

# export EDITOR="emacs -nw"
#export EDITOR="helix"
export EDITOR="nvim"
export VISUAL=$EDITOR

alias cat='bat -pP'
#alias ps=procs
# alias grep=rg
# alias find='echo -e "Maybe use fd instead ...\n" ; find'

export FZF_DEFAULT_COMMAND='fd -H'

alias ssh-add-smartcard='ssh-add -s /usr/lib64/pkcs11/opensc-pkcs11.so'

# see .profile
# export QT_QPA_PLATFORMTHEME="qt5ct"

## Java
export JAVA_HOME=/usr/lib/jvm/default

## Oracle
export TNS_ADMIN=~/Seafile-Cenote/TNS_ADMIN
alias sqlplus='rlwrap sqlplus'

## Jasperstarter and other stuff
export PATH=$PATH:/opt/nsis-2.46/bin
export PATH=$PATH:~/bin
## jasperstarter bin ausgepackt:
export PATH=$PATH:~/jasperstarter/bin

# Powershell
alias powershell='echo pwsh; pwsh'

export ICAROOT=/opt/Citrix/ICAClient

# if proxy is set, set Maven proxy
# if [ ! -z ${http_proxy+x} ]; then
#     echo "Setting Maven Proxy"
#     proxy_host=${http_proxy#*//}
#     proxy_host=${proxy_host%/*}
#     proxy_port=${proxy_host#*:}
#     proxy_host=${proxy_host%:*}
#     #echo $proxy_host $proxy_port
#     #echo "MAVEN_OPTS=${MAVEN_OPTS}"
#     MAVEN_OPTS="${MAVEN_OPTS} -Dhttp.proxyHost=$proxy_host -Dhttp.proxyPort=$proxy_port -Dhttps.proxyHost=$proxy_host -Dhttps.proxyPort=$proxy_port"
#     export MAVEN_OPTS
#     #echo "MAVEN_OPTS=${MAVEN_OPTS}"
# fi


## should be last statement because of PROXY ...
## check for Archlinux news:


## check for Archlinux news:
#echo "Checking for Archlinux News..."
#if [ "$(LC_ALL=C newsboat -x reload print-unread)" != "0 unread articles" ] ; then
#    #echo "$(LC_ALL=C newsboat -x reload print-unread)"
#    newsboat
#fi
#echo "... OK"


## for Rust
#export PATH="$HOME/.cargo/bin:$PATH"
#source $(rustc --print sysroot)/etc/bash_completion.d/cargo

## for Go
export PATH=$PATH:~/go/bin
##  for Ruby
export PATH=$PATH:~/.gem/ruby/2.7.0/bin
## for Android Studio
export ANDROID_HOME=~/Android/Sdk
## for jetporch dev
export PATH=$PATH:~/src/Rust/jetporch/target/release
# Created by `userpath` on 2021-06-21 19:20:22
export PATH="$PATH:/home/vosskaem/.local/bin"
. "$HOME/.cargo/env"

export WFICA_OPTS="-span 1"

## tmux settings
alias tma='tmux attach || tmux'
alias tmad='tmux attach -d || tmux'
alias tml='tmux ls'
if [ $(tmux ls > /dev/null 2>&1 ; echo $?) -eq 0 ] ; then
    echo "You have running tmux sessions:"
    tmux ls
fi

## chezmoi alias with inner alias and completion
. ~/.chezmoi-completion.sh
# alias vm='chezmoi'
cm() {
    if [ "$1" = "st" ]; then
        shift
        chezmoi status "$@"
    elif [ "$1" = "cd" ]; then
        shift
        cd ~/.local/share/chezmoi
    else
        chezmoi "$@"
    fi
}

function y() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
    yazi "$@" --cwd-file="$tmp"
    if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
        builtin cd -- "$cwd"
    fi
    rm -f -- "$tmp"
}

eval "$(starship init bash)"
eval "$(zoxide init --cmd cd bash)"
